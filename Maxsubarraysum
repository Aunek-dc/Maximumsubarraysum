#include <iostream>
#include<bits/stdc++.h>

using namespace std;
#define long long ll
#define endl "\n"
typedef vector<int>vi;
#define vector<long long>vll
typedef pair<int, int>pi;
#define make_pair m_p
void printvec(vi &prv){
    for(auto it:prv){
        cout<<it<<" ";
    }
    cout<<endl;
}


int main()
{
    vi v={-1,2,4,2};
    //printvec(v);
    int bstsum=0;//O(n^3 approach)
    for(int a=0;a<v.size();a++){
            for(int b=a;b<v.size();b++){
                int s=0;
                for(int k=a;k<b;k++){
                    s+=v[k];
                }
                bstsum=max(s,bstsum);
            }
    }
    cout<<"This is cubic approach:"<<bstsum<<endl;
    int bst=0;//O(n^2) approach
    for(int i=0;i<v.size();i++){
            int s=0;
        for(int j=i;j<v.size();j++){
            s+=v[j];
            bst=max(bst,s);
        }
    }
    cout<<"This is quadratic approach:"<<bst<<endl;
    int best=0,sum=0;//O(n)approach(Kadane's algorithm)
    for(int i=0;i<v.size();i++){
        sum=max(v[i],sum+v[i]);
        best=max(best,sum);
    }
    cout<<"This is linear approach:"<<best<<endl;

    return 0;
}
